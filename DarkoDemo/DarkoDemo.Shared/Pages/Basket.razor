@attribute [Route(Routes.Basket)]

@inject BasketApiClient BasketApiClient

<PageTitle>Basket</PageTitle>

<MudText Typo="Typo.h4" Class="mb-4">Basket</MudText>

<Loader ShowIfNull="basket" />

@if (basket is not null && basket.Items.Any())
{
    <MudDataGrid Outlined="true" Items="@basket.Items">
        <Columns>
            <PropertyColumn Property="x => x.Product.Name" Title="Product" />
            <PropertyColumn Property="x => x.UnitPrice" Title="Price" Format="C" />
            <PropertyColumn Property="x => x.Quantity">
                <FooterTemplate>
                    <MudText Class="total" Typo="Typo.inherit">Total:</MudText>
                </FooterTemplate>
            </PropertyColumn>
            <PropertyColumn Property="x => x.SubTotal" Title="Sub Total" Format="C">
                <FooterTemplate>
                    @basket.Total.ToString("C")
                </FooterTemplate>
            </PropertyColumn>
        </Columns>
    </MudDataGrid>
}

@code {
    [Parameter]
    public Guid CustomerId { get; set; }

    private BasketRead? basket;

    protected override async Task OnInitializedAsync()
    {
        basket = await BasketApiClient.GetBasket(CustomerId);
    }
}
