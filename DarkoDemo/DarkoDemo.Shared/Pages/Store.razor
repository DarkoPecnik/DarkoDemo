@page "/store"
@inject CatalogApiClient CatalogApi
@inject BasketApiClient BasketApi
@inject CustomerSwitcherService CustomerSwitcherService
@inject ISnackbar Snackbar

<PageTitle>Storefront</PageTitle>

<MudText Typo="Typo.h4" Class="mb-4">Storefront</MudText>

<Loader ShowIfNull="products" />

@if (products is not null)
{
    <MudStack Row="true" Wrap="Wrap.Wrap">
        @foreach (var product in products)
        {
            <MudCard Outlined="true" Style="width: 450px;">
                <MudCardHeader>
                    <CardHeaderAvatar>
                        <MudAvatar Color="Color.Primary">@product.Name.FirstLetterOfWord()</MudAvatar>
                    </CardHeaderAvatar>
                    <CardHeaderContent>
                        <MudText Typo="Typo.body1">@product.Name</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText Typo="Typo.body2">@product.Description</MudText>
                </MudCardContent>
                <MudCardActions>
                    @foreach (var category in product.Categories)
                    {
                        <MudChip T="string" Variant="Variant.Text" Color="Color.Default">@category.Name</MudChip>
                    }
                    <MudSpacer />
                    <MudIconButton title="Add to basket" OnClick="() => AddToBasket(product.Id, product.Name)" Icon="@Icons.Material.Filled.AddShoppingCart" Color="Color.Secondary" />
                </MudCardActions>
            </MudCard>
        }
    </MudStack>
}

@code {
    private IEnumerable<ProductRead>? products;

    protected override async Task OnInitializedAsync()
    {
        products = await CatalogApi.ReadProducts();
    }

    private async Task AddToBasket(Guid productId, string name)
    {
        bool success = await BasketApi.AddToBasket(productId, CustomerSwitcherService.CurrentCustomerId);
        if (success)
        {
            Snackbar.Add($"{name} added to basket.", Severity.Success);
        }
    }
}
